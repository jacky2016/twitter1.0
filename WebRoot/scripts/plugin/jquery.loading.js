//define(['jquery'], function ($) {
    (function (A, v, p) { function i(b, a) { var c = v.createElement(b || "div"), d; for (d in a) c[d] = a[d]; return c } function k(b) { for (var a = 1, c = arguments.length; a < c; a++) b.appendChild(arguments[a]); return b } function B(b, a, c, d) { var e = ["opacity", a, ~ ~(b * 100), c, d].join("-"); c = 0.01 + c / d * 100; d = Math.max(1 - (1 - b) / a * (100 - c), b); var f = n.substring(0, n.indexOf("Animation")).toLowerCase(); if (!w[e]) { x.insertRule("@" + (f && "-" + f + "-" || "") + "keyframes " + e + "{0%{opacity:" + d + "}" + c + "%{opacity:" + b + "}" + (c + 0.01) + "%{opacity:1}" + (c + a) % 100 + "%{opacity:" + b + "}100%{opacity:" + d + "}}", 0); w[e] = 1 } return e } function r(b, a) { var c = b.style, d, e; if (c[a] !== p) return a; a = a.charAt(0).toUpperCase() + a.slice(1); for (e = 0; e < y.length; e++) { d = y[e] + a; if (c[d] !== p) return d } } function g(b, a) { for (var c in a) b.style[r(b, c) || c] = a[c]; return b } function C(b) { for (var a = 1; a < arguments.length; a++) { var c = arguments[a]; for (var d in c) if (b[d] === p) b[d] = c[d] } return b } function z(b) { for (var a = { x: b.offsetLeft, y: b.offsetTop }; b = b.offsetParent; ) { a.x += b.offsetLeft; a.y += b.offsetTop } return a } var y = ["webkit", "Moz", "ms", "O"], w = {}, n, x = function () { var b = i("style"); k(v.getElementsByTagName("head")[0], b); return b.sheet || b.styleSheet } (), s = function b(a) { if (!this.spin) return new b(a); this.opts = C(a || {}, b.defaults, D) }, D = s.defaults = { lines: 12, length: 7, width: 5, radius: 10, color: "#000", speed: 1, trail: 100, opacity: 0.25, fps: 20 }, q = s.prototype = { spin: function (b) { this.stop(); var a = this, c = a.el = g(i(), { position: "relative" }), d, e; if (b) { b.insertBefore(c, b.firstChild || null); e = z(b); d = z(c); g(c, { left: (b.offsetWidth >> 1) - d.x + e.x + "px", top: (b.offsetHeight >> 1) - d.y + e.y + "px" }) } c.setAttribute("aria-role", "progressbar"); a.lines(c, a.opts); if (!n) { var f = a.opts, j = 0, o = f.fps, l = o / f.speed, h = (1 - f.opacity) / (l * f.trail / 100), t = l / f.lines; (function u() { j++; for (var m = f.lines; m; m--) a.opacity(c, f.lines - m, Math.max(1 - (j + m * t) % l * h, f.opacity), f); a.timeout = a.el && setTimeout(u, ~ ~(1E3 / o)) })() } return a }, stop: function () { var b = this.el; if (b) { clearTimeout(this.timeout); b.parentNode && b.parentNode.removeChild(b); this.el = p } return this } }; q.lines = function (b, a) { function c(f, j) { return g(i(), { position: "absolute", width: a.length + a.width + "px", height: a.width + "px", background: f, boxShadow: j, transformOrigin: "left", transform: "rotate(" + ~ ~(360 / a.lines * d) + "deg) translate(" + a.radius + "px,0)", borderRadius: (a.width >> 1) + "px" }) } for (var d = 0, e; d < a.lines; d++) { e = g(i(), { position: "absolute", top: 1 + ~(a.width / 2) + "px", transform: a.hwaccel ? "translate3d(0,0,0)" : "", opacity: a.opacity, animation: n && B(a.opacity, a.trail, d, a.lines) + " " + 1 / a.speed + "s linear infinite" }); a.shadow && k(e, g(c("#000", "0 0 4px #000"), { top: "2px" })); k(b, k(e, c(a.color, "0 0 1px rgba(0,0,0,.1)"))) } return b }; q.opacity = function (b, a, c) { if (a < b.childNodes.length) b.childNodes[a].style.opacity = c }; (function () { var b = g(i("group"), { behavior: "url(#default#VML)" }); if (!r(b, "transform") && b.adj) { for (b = 4; b--; ) x.addRule(["group", "roundrect", "fill", "stroke"][b], "behavior:url(#default#VML)"); q.lines = function (a, c) { function d() { return g(i("group", { coordsize: j + " " + j, coordorigin: -f + " " + -f }), { width: j, height: j }) } function e(t, u, m) { k(o, k(g(d(), { rotation: 360 / c.lines * t + "deg", left: ~ ~u }), k(g(i("roundrect", { arcsize: 1 }), { width: f, height: c.width, left: c.radius, top: -c.width >> 1, filter: m }), i("fill", { color: c.color, opacity: c.opacity }), i("stroke", { opacity: 0 })))) } var f = c.length + c.width, j = 2 * f, o = d(), l = ~(c.length + c.radius + c.width) + "px", h; if (c.shadow) for (h = 1; h <= c.lines; h++) e(h, -2, "progid:DXImageTransform.Microsoft.Blur(pixelradius=2,makeshadow=1,shadowopacity=.3)"); for (h = 1; h <= c.lines; h++) e(h); return k(g(a, { margin: l + " 0 0 " + l, zoom: 1 }), o) }; q.opacity = function (a, c, d, e) { a = a.firstChild; e = e.shadow && e.lines || 0; if (a && c + e < a.childNodes.length) if (a = (a = (a = a.childNodes[c + e]) && a.firstChild) && a.firstChild) a.opacity = d } } else n = r(b, "animation") })(); A.Spinner = s })(window, document);
    //return $;
//});